"use strict";angular.module("tipExpert.home",[]);var tipExpert=angular.module("tipExpert",["tipExpert.home","ui.bootstrap","ui.router","pascalprecht.translate"]);tipExpert.config(["$stateProvider","$urlRouterProvider","$locationProvider","$httpProvider",function(e,r,t,o){var s=userConfig.accessLevels,l={header:{templateUrl:"/modules/home/views/header.html",controller:"navigationController"},main:{template:"<ui-view/>"}};e.state("user",{url:"/user",views:l,"abstract":!0}).state("user.overview",{title:"Users",url:"",templateUrl:"/modules/user/views/user.html",controller:"userController",access:s.user}).state("user.profile",{title:"User profile",url:"/:userId",templateUrl:"/modules/user/views/profile.html",controller:"userProfileController",access:s.user}).state("matches",{url:"/matches",views:l,"abstract":!0}).state("matches.overview",{title:"Matches",url:"",templateUrl:"/modules/match/views/matches.html",controller:"matchController",access:s.admin}).state("matches.finished",{title:"Not implemented yet!",url:"/finished",templateUrl:"todo",controller:"finishedMatchesController",access:s.admin}).state("games",{url:"/games",views:l,"abstract":!0}).state("games.overview",{title:"Games",url:"",templateUrl:"/modules/game/views/myGames.html",controller:"myGamesController",access:s.user}).state("games.history",{title:"Games History",url:"/history",templateUrl:"/modules/game/views/gamesHistory.html",controller:"gamesHistoryController",access:s.user}).state("games.create",{title:"Create game",url:"/create",templateUrl:"/modules/game/views/editGame.html",controller:"editGameController",access:s.user}).state("games.edit",{title:"Edit game",url:"/:gameId/edit",templateUrl:"/modules/game/views/editGame.html",controller:"editGameController",access:s.user}).state("games.show",{title:"Game",url:"/:gameId",templateUrl:"/modules/game/views/game.html",controller:"gameController",access:s.user}).state("home",{title:"Home",url:"/",views:{header:{templateUrl:"/modules/home/views/loginHeader.html",controller:"navigationController"},main:{templateUrl:"/modules/home/views/index.html",controller:"homeController"}},access:s["public"]}),t.html5Mode({enabled:!0,requireBase:!1}),o.interceptors.push(["$q","$location",function(e,r){return{responseError:function(t){return 401===t.status||403===t.status?(r.path("/"),e.reject(t)):e.reject(t)}}}])}]),function(e){e.roles={admin:1,user:2,"public":3},e.accessLevels={admin:1,user:2,"public":3}}("undefined"==typeof exports?this.userConfig={}:exports);var homeModule=angular.module("tipExpert.home",[]);homeModule.controller("homeController",["$scope","$state","$window","Auth","alertService",function(e,r,t,o,s){e.user={name:"",email:"",password:""},e.signup=function(){e.submitted=!0,e.submitForm.$invalid||o.signup(e.user).then(function(){r.go("games.overview")})["catch"](s.error)},e.loginOauth=function(e){t.location.href="/auth/"+e}}]);var user=angular.module("tipExpert.user");user.controller("languageController",["$scope","$translate",function(e,r){e.changeLanguage=function(e){r.use(e)}}]);var user=angular.module("tipExpert.user");user.controller("navigationController",["$scope","$state","Auth","alertService",function(e,r,t,o){e.user=t.user,e.logout=function(){t.logout(function(){r.go("home")},o.error)},e.login=function(){e.submitted=!0,e.loginForm.$invalid||t.login({email:e.loginForm.email.$modelValue,password:e.loginForm.password.$modelValue},function(e){r.go("games.overview")},o.error)},e.loginOauth=function(e){$window.location.href="/auth/"+e},e.alerts=o.alerts,e.closeAlert=function(e){o.closeAlert(e)}}]);var user=angular.module("tipExpert.user");user.factory("alertService",["$timeout",function(e){var r=[],t=function(t,s){var l="An error occoured";void 0!=t&&(l=void 0!=t.msg?t.msg:void 0!=t.errors?t.errors[0]:t);var u={msg:l,type:s};u.timeout=e(function(){o(u)},5e3),r.push(u)},o=function(t){t.timeout&&e.cancel(t.timeout);var o=r.indexOf(t);r.splice(o,1)};return{alerts:r,error:function(e){t(e,"warning")},info:function(e){t(e,"success")},closeAlert:function(e){o(r[e])}}}]);var user=angular.module("tipExpert.user");user.controller("userController",["$scope","userService","alertService",function(e,r,t){e.roles=[{name:"Admin",index:1},{name:"User",index:2}],e.save=function(){r.update(e.users).then(function(){t.info("Successfully saved.")})["catch"](t.error)},r.loadAllUser().then(function(r){e.users=r})["catch"](t.error)}]);var user=angular.module("tipExpert.user");user.controller("userProfileController",["$scope","$stateParams","userService","alertService",function(e,r,t,o){e.user={},e.hideRole=!0,r.userId&&t.loadProfile(r.userId).then(function(r){e.user=r,e.hideRole=r.role==userConfig.roles.user})["catch"](o.error)}]);var userModule=angular.module("tipExpert.user");userModule.factory("Auth",["$http","$q","$cookieStore","userService",function(e,r,t,o){var s=userConfig.accessLevels,l=userConfig.roles,u=function(){var e=n.id;e&&""!=e&&o.loadProfile(e).then(i)},i=function(e){n.id=e.id,n.name=e.name,n.role=e.role,n.email=e.email,n.picture=e.picture,n.coins=e.coins,n.isLoggedIn=e.role==l.user||e.role==l.admin,n.isAdmin=e.role==l.admin},n=t.get("user")||{id:"",name:"",role:l["public"],email:""};return n.isLoggedIn=n.role==l.user||n.role==l.admin,t.remove("user"),u(),{authorize:function(e,r){return void 0===r&&(r=n.role),e==s.admin?r==l.admin:e==s.user?r==l.admin||r==l.user:!0},signup:function(t){var o=r.defer();return e.post("/signup",t).success(function(e){i(e),o.resolve(e)}).error(o.reject),o.promise},login:function(r,t,o){e.post("/auth",r).success(function(e){i(e),t(e)}).error(o)},logout:function(r,t){e.post("/logout").success(function(){i({username:"",role:l["public"]}),r()}).error(t)},reloadCurrentUserProfile:u,user:n}}]);var user=angular.module("tipExpert.user");user.factory("userService",["$http","$q",function(e,r){var t=[],o=function(){var o=r.defer();return t.length>0?(o.resolve(t),o.promise):(e.get("/api/user").success(function(e,r,s,l){angular.forEach(e,function(e){t.push(e)}),o.resolve(t)}).error(o.reject),o.promise)};return{loadAllUser:o,loadFriendsForUser:function(e){return o()},loadProfile:function(t){var o=r.defer();return e.get("/api/user/"+t).success(o.resolve).error(o.reject),o.promise},update:function(t){var o=r.defer(),s=[];return angular.forEach(t,function(r){s.push(e.put("/api/user/"+r._id,r))}),r.all(s).then(o.resolve)["catch"](function(e){o.reject(e.data)}),o.promise}}}]);